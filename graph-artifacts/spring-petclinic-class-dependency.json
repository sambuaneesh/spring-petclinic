{
  "metadata" : {
    "totalClasses" : 25,
    "relationshipCounts" : {
      "EXTENDS" : 8,
      "PERSISTS" : 3,
      "CALLS" : 15,
      "USES" : 23,
      "CREATES" : 5,
      "ASSOCIATES" : 4
    },
    "relationshipTotalOccurrences" : {
      "EXTENDS" : 8,
      "PERSISTS" : 3,
      "CALLS" : 43,
      "USES" : 117,
      "CREATES" : 7,
      "ASSOCIATES" : 4
    }
  },
  "classes" : {
    "org.springframework.samples.petclinic.PetClinicApplication" : {
      "annotations" : [ "@SpringBootApplication", "@ImportRuntimeHints(PetClinicRuntimeHints.class)" ],
      "methods" : [ {
        "signature" : "public static void main(null)"
      } ],
      "relationships" : { }
    },
    "org.springframework.samples.petclinic.PetClinicRuntimeHints" : {
      "methods" : [ {
        "signature" : "public void registerHints(org.springframework.aot.hint.RuntimeHints, java.lang.ClassLoader)",
        "annotations" : [ "@Override" ]
      } ],
      "relationships" : { }
    },
    "org.springframework.samples.petclinic.model.BaseEntity" : {
      "annotations" : [ "@MappedSuperclass" ],
      "methods" : [ {
        "signature" : "public java.lang.Integer getId()"
      }, {
        "signature" : "public void setId(java.lang.Integer)"
      }, {
        "signature" : "public boolean isNew()"
      } ],
      "fields" : [ {
        "declaration" : "private Integer id",
        "annotations" : [ "@Id", "@GeneratedValue(strategy = GenerationType.IDENTITY)" ]
      } ],
      "relationships" : {
        "CALLED_BY" : {
          "org.springframework.samples.petclinic.owner.Owner" : 1,
          "org.springframework.samples.petclinic.owner.PetController" : 4,
          "org.springframework.samples.petclinic.owner.PetValidator" : 1,
          "org.springframework.samples.petclinic.owner.OwnerController" : 4
        },
        "EXTENDED_BY" : {
          "org.springframework.samples.petclinic.model.Person" : 1,
          "org.springframework.samples.petclinic.model.NamedEntity" : 1,
          "org.springframework.samples.petclinic.owner.Visit" : 1
        }
      }
    },
    "org.springframework.samples.petclinic.model.NamedEntity" : {
      "annotations" : [ "@MappedSuperclass" ],
      "methods" : [ {
        "signature" : "public java.lang.String getName()"
      }, {
        "signature" : "public void setName(java.lang.String)"
      }, {
        "signature" : "public java.lang.String toString()",
        "annotations" : [ "@Override" ]
      } ],
      "fields" : [ {
        "declaration" : "private String name",
        "annotations" : [ "@Column(name = \"name\")", "@NotBlank" ]
      } ],
      "relationships" : {
        "EXTENDS" : {
          "org.springframework.samples.petclinic.model.BaseEntity" : 1
        },
        "CALLED_BY" : {
          "org.springframework.samples.petclinic.owner.PetTypeFormatter" : 1,
          "org.springframework.samples.petclinic.owner.PetController" : 5,
          "org.springframework.samples.petclinic.owner.PetValidator" : 1
        },
        "EXTENDED_BY" : {
          "org.springframework.samples.petclinic.owner.Pet" : 1,
          "org.springframework.samples.petclinic.owner.PetType" : 1,
          "org.springframework.samples.petclinic.vet.Specialty" : 1
        }
      }
    },
    "org.springframework.samples.petclinic.model.Person" : {
      "annotations" : [ "@MappedSuperclass" ],
      "methods" : [ {
        "signature" : "public java.lang.String getFirstName()"
      }, {
        "signature" : "public void setFirstName(java.lang.String)"
      }, {
        "signature" : "public java.lang.String getLastName()"
      }, {
        "signature" : "public void setLastName(java.lang.String)"
      } ],
      "fields" : [ {
        "declaration" : "private String firstName",
        "annotations" : [ "@Column(name = \"first_name\")", "@NotBlank" ]
      }, {
        "declaration" : "private String lastName",
        "annotations" : [ "@Column(name = \"last_name\")", "@NotBlank" ]
      } ],
      "relationships" : {
        "EXTENDS" : {
          "org.springframework.samples.petclinic.model.BaseEntity" : 1
        },
        "CALLED_BY" : {
          "org.springframework.samples.petclinic.owner.OwnerController" : 3
        },
        "EXTENDED_BY" : {
          "org.springframework.samples.petclinic.owner.Owner" : 1,
          "org.springframework.samples.petclinic.vet.Vet" : 1
        }
      }
    },
    "org.springframework.samples.petclinic.owner.Owner" : {
      "annotations" : [ "@Entity", "@Table(name = \"owners\")" ],
      "methods" : [ {
        "signature" : "public java.lang.String getAddress()"
      }, {
        "signature" : "public void setAddress(java.lang.String)"
      }, {
        "signature" : "public java.lang.String getCity()"
      }, {
        "signature" : "public void setCity(java.lang.String)"
      }, {
        "signature" : "public java.lang.String getTelephone()"
      }, {
        "signature" : "public void setTelephone(java.lang.String)"
      }, {
        "signature" : "public null getPets()"
      }, {
        "signature" : "public void addPet(org.springframework.samples.petclinic.owner.Pet)"
      }, {
        "signature" : "public org.springframework.samples.petclinic.owner.Pet getPet(java.lang.String)"
      }, {
        "signature" : "public org.springframework.samples.petclinic.owner.Pet getPet(java.lang.Integer)"
      }, {
        "signature" : "public org.springframework.samples.petclinic.owner.Pet getPet(java.lang.String, boolean)"
      }, {
        "signature" : "public java.lang.String toString()",
        "annotations" : [ "@Override" ]
      }, {
        "signature" : "public void addVisit(java.lang.Integer, org.springframework.samples.petclinic.owner.Visit)"
      } ],
      "fields" : [ {
        "declaration" : "private String address",
        "annotations" : [ "@Column(name = \"address\")", "@NotBlank" ]
      }, {
        "declaration" : "private String city",
        "annotations" : [ "@Column(name = \"city\")", "@NotBlank" ]
      }, {
        "declaration" : "private String telephone",
        "annotations" : [ "@Column(name = \"telephone\")", "@NotBlank", "@Pattern(regexp = \"\\\\d{10}\", message = \"{telephone.invalid}\")" ]
      }, {
        "declaration" : "private final List<Pet> pets",
        "annotations" : [ "@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER)", "@JoinColumn(name = \"owner_id\")", "@OrderBy(\"name\")" ]
      } ],
      "relationships" : {
        "EXTENDS" : {
          "org.springframework.samples.petclinic.model.Person" : 1
        },
        "USED_BY" : {
          "org.springframework.samples.petclinic.owner.VisitController" : 2,
          "org.springframework.samples.petclinic.owner.PetController" : 7,
          "org.springframework.samples.petclinic.owner.OwnerController" : 1
        },
        "CALLS" : {
          "org.springframework.samples.petclinic.owner.Pet" : 1,
          "org.springframework.samples.petclinic.model.BaseEntity" : 1
        },
        "USES" : {
          "org.springframework.samples.petclinic.owner.Pet" : 12,
          "org.springframework.samples.petclinic.owner.Visit" : 5
        },
        "ASSOCIATES" : {
          "org.springframework.samples.petclinic.owner.Pet" : 1
        },
        "PERSISTED_BY" : {
          "org.springframework.samples.petclinic.owner.OwnerRepository" : 1
        }
      }
    },
    "org.springframework.samples.petclinic.owner.OwnerController" : {
      "annotations" : [ "@Controller" ],
      "methods" : [ {
        "signature" : "public void setAllowedFields(org.springframework.web.bind.WebDataBinder)",
        "annotations" : [ "@InitBinder" ]
      }, {
        "signature" : "public org.springframework.samples.petclinic.owner.Owner findOwner(java.lang.Integer)",
        "annotations" : [ "@ModelAttribute(\"owner\")" ]
      }, {
        "signature" : "public java.lang.String initCreationForm()",
        "annotations" : [ "@GetMapping(\"/owners/new\")" ]
      }, {
        "signature" : "public java.lang.String processCreationForm(org.springframework.samples.petclinic.owner.Owner, org.springframework.validation.BindingResult, org.springframework.web.servlet.mvc.support.RedirectAttributes)",
        "annotations" : [ "@PostMapping(\"/owners/new\")" ]
      }, {
        "signature" : "public java.lang.String initFindForm()",
        "annotations" : [ "@GetMapping(\"/owners/find\")" ]
      }, {
        "signature" : "public java.lang.String processFindForm(int, org.springframework.samples.petclinic.owner.Owner, org.springframework.validation.BindingResult, org.springframework.ui.Model)",
        "annotations" : [ "@GetMapping(\"/owners\")" ]
      }, {
        "signature" : "private java.lang.String addPaginationModel(int, org.springframework.ui.Model, null)"
      }, {
        "signature" : "private null findPaginatedForOwnersLastName(int, java.lang.String)"
      }, {
        "signature" : "public java.lang.String initUpdateOwnerForm()",
        "annotations" : [ "@GetMapping(\"/owners/{ownerId}/edit\")" ]
      }, {
        "signature" : "public java.lang.String processUpdateOwnerForm(org.springframework.samples.petclinic.owner.Owner, org.springframework.validation.BindingResult, int, org.springframework.web.servlet.mvc.support.RedirectAttributes)",
        "annotations" : [ "@PostMapping(\"/owners/{ownerId}/edit\")" ]
      }, {
        "signature" : "public org.springframework.web.servlet.ModelAndView showOwner(int)",
        "annotations" : [ "@GetMapping(\"/owners/{ownerId}\")" ]
      }, {
        "signature" : "public org.springframework.samples.petclinic.owner.OwnerController OwnerController(org.springframework.samples.petclinic.owner.OwnerRepository)"
      } ],
      "fields" : [ {
        "declaration" : "private static final String VIEWS_OWNER_CREATE_OR_UPDATE_FORM"
      }, {
        "declaration" : "private final OwnerRepository owners"
      } ],
      "relationships" : {
        "CALLS" : {
          "org.springframework.samples.petclinic.model.BaseEntity" : 4,
          "org.springframework.samples.petclinic.model.Person" : 3
        },
        "USES" : {
          "org.springframework.samples.petclinic.owner.Owner" : 13,
          "org.springframework.samples.petclinic.owner.OwnerRepository" : 2
        },
        "CREATES" : {
          "org.springframework.samples.petclinic.owner.Owner" : 1
        }
      }
    },
    "org.springframework.samples.petclinic.owner.OwnerRepository" : {
      "methods" : [ {
        "signature" : "public abstract null findByLastNameStartingWith(java.lang.String, org.springframework.data.domain.Pageable)"
      }, {
        "signature" : "public abstract null findById(java.lang.Integer)"
      } ],
      "relationships" : {
        "PERSISTS" : {
          "org.springframework.samples.petclinic.owner.Owner" : 1
        },
        "USED_BY" : {
          "org.springframework.samples.petclinic.owner.VisitController" : 2,
          "org.springframework.samples.petclinic.owner.PetController" : 2,
          "org.springframework.samples.petclinic.owner.OwnerController" : 2
        }
      }
    },
    "org.springframework.samples.petclinic.owner.Pet" : {
      "annotations" : [ "@Entity", "@Table(name = \"pets\")" ],
      "methods" : [ {
        "signature" : "public void setBirthDate(java.time.LocalDate)"
      }, {
        "signature" : "public java.time.LocalDate getBirthDate()"
      }, {
        "signature" : "public org.springframework.samples.petclinic.owner.PetType getType()"
      }, {
        "signature" : "public void setType(org.springframework.samples.petclinic.owner.PetType)"
      }, {
        "signature" : "public null getVisits()"
      }, {
        "signature" : "public void addVisit(org.springframework.samples.petclinic.owner.Visit)"
      } ],
      "fields" : [ {
        "declaration" : "private LocalDate birthDate",
        "annotations" : [ "@Column(name = \"birth_date\")", "@DateTimeFormat(pattern = \"yyyy-MM-dd\")" ]
      }, {
        "declaration" : "private PetType type",
        "annotations" : [ "@ManyToOne", "@JoinColumn(name = \"type_id\")" ]
      }, {
        "declaration" : "private final Set<Visit> visits",
        "annotations" : [ "@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER)", "@JoinColumn(name = \"pet_id\")", "@OrderBy(\"date ASC\")" ]
      } ],
      "relationships" : {
        "EXTENDS" : {
          "org.springframework.samples.petclinic.model.NamedEntity" : 1
        },
        "USED_BY" : {
          "org.springframework.samples.petclinic.owner.VisitController" : 1,
          "org.springframework.samples.petclinic.owner.Owner" : 1,
          "org.springframework.samples.petclinic.owner.PetController" : 2,
          "org.springframework.samples.petclinic.owner.PetValidator" : 2
        },
        "USES" : {
          "org.springframework.samples.petclinic.owner.PetType" : 3,
          "org.springframework.samples.petclinic.owner.Visit" : 4
        },
        "ASSOCIATES" : {
          "org.springframework.samples.petclinic.owner.PetType" : 1,
          "org.springframework.samples.petclinic.owner.Visit" : 1
        }
      }
    },
    "org.springframework.samples.petclinic.owner.PetController" : {
      "annotations" : [ "@Controller", "@RequestMapping(\"/owners/{ownerId}\")" ],
      "methods" : [ {
        "signature" : "public null populatePetTypes()",
        "annotations" : [ "@ModelAttribute(\"types\")" ]
      }, {
        "signature" : "public org.springframework.samples.petclinic.owner.Owner findOwner(int)",
        "annotations" : [ "@ModelAttribute(\"owner\")" ]
      }, {
        "signature" : "public org.springframework.samples.petclinic.owner.Pet findPet(int, java.lang.Integer)",
        "annotations" : [ "@ModelAttribute(\"pet\")" ]
      }, {
        "signature" : "public void initOwnerBinder(org.springframework.web.bind.WebDataBinder)",
        "annotations" : [ "@InitBinder(\"owner\")" ]
      }, {
        "signature" : "public void initPetBinder(org.springframework.web.bind.WebDataBinder)",
        "annotations" : [ "@InitBinder(\"pet\")" ]
      }, {
        "signature" : "public java.lang.String initCreationForm(org.springframework.samples.petclinic.owner.Owner, org.springframework.ui.ModelMap)",
        "annotations" : [ "@GetMapping(\"/pets/new\")" ]
      }, {
        "signature" : "public java.lang.String processCreationForm(org.springframework.samples.petclinic.owner.Owner, org.springframework.samples.petclinic.owner.Pet, org.springframework.validation.BindingResult, org.springframework.web.servlet.mvc.support.RedirectAttributes)",
        "annotations" : [ "@PostMapping(\"/pets/new\")" ]
      }, {
        "signature" : "public java.lang.String initUpdateForm()",
        "annotations" : [ "@GetMapping(\"/pets/{petId}/edit\")" ]
      }, {
        "signature" : "public java.lang.String processUpdateForm(org.springframework.samples.petclinic.owner.Owner, org.springframework.samples.petclinic.owner.Pet, org.springframework.validation.BindingResult, org.springframework.web.servlet.mvc.support.RedirectAttributes)",
        "annotations" : [ "@PostMapping(\"/pets/{petId}/edit\")" ]
      }, {
        "signature" : "private void updatePetDetails(org.springframework.samples.petclinic.owner.Owner, org.springframework.samples.petclinic.owner.Pet)"
      }, {
        "signature" : "public org.springframework.samples.petclinic.owner.PetController PetController(org.springframework.samples.petclinic.owner.OwnerRepository, org.springframework.samples.petclinic.owner.PetTypeRepository)"
      } ],
      "fields" : [ {
        "declaration" : "private static final String VIEWS_PETS_CREATE_OR_UPDATE_FORM"
      }, {
        "declaration" : "private final OwnerRepository owners"
      }, {
        "declaration" : "private final PetTypeRepository types"
      } ],
      "relationships" : {
        "CALLS" : {
          "org.springframework.samples.petclinic.owner.Pet" : 8,
          "org.springframework.samples.petclinic.owner.Owner" : 7,
          "org.springframework.samples.petclinic.model.BaseEntity" : 4,
          "org.springframework.samples.petclinic.model.NamedEntity" : 5
        },
        "USES" : {
          "org.springframework.samples.petclinic.owner.Pet" : 17,
          "org.springframework.samples.petclinic.owner.Owner" : 14,
          "org.springframework.samples.petclinic.owner.PetValidator" : 1,
          "org.springframework.samples.petclinic.owner.PetTypeRepository" : 2,
          "org.springframework.samples.petclinic.owner.OwnerRepository" : 2
        },
        "CREATES" : {
          "org.springframework.samples.petclinic.owner.Pet" : 2,
          "org.springframework.samples.petclinic.owner.PetValidator" : 1
        }
      }
    },
    "org.springframework.samples.petclinic.owner.PetType" : {
      "annotations" : [ "@Entity", "@Table(name = \"types\")" ],
      "relationships" : {
        "EXTENDS" : {
          "org.springframework.samples.petclinic.model.NamedEntity" : 1
        },
        "USED_BY" : {
          "org.springframework.samples.petclinic.owner.Pet" : 1,
          "org.springframework.samples.petclinic.owner.PetTypeFormatter" : 4
        },
        "PERSISTED_BY" : {
          "org.springframework.samples.petclinic.owner.PetTypeRepository" : 1
        }
      }
    },
    "org.springframework.samples.petclinic.owner.PetTypeFormatter" : {
      "annotations" : [ "@Component" ],
      "methods" : [ {
        "signature" : "public java.lang.String print(org.springframework.samples.petclinic.owner.PetType, java.util.Locale)",
        "annotations" : [ "@Override" ]
      }, {
        "signature" : "public org.springframework.samples.petclinic.owner.PetType parse(java.lang.String, java.util.Locale)",
        "annotations" : [ "@Override" ]
      }, {
        "signature" : "public org.springframework.samples.petclinic.owner.PetTypeFormatter PetTypeFormatter(org.springframework.samples.petclinic.owner.PetTypeRepository)"
      } ],
      "fields" : [ {
        "declaration" : "private final PetTypeRepository types"
      } ],
      "relationships" : {
        "CALLS" : {
          "org.springframework.samples.petclinic.model.NamedEntity" : 1
        },
        "USES" : {
          "org.springframework.samples.petclinic.owner.PetType" : 4,
          "org.springframework.samples.petclinic.owner.PetTypeRepository" : 2
        }
      }
    },
    "org.springframework.samples.petclinic.owner.PetTypeRepository" : {
      "methods" : [ {
        "signature" : "public abstract null findPetTypes()",
        "annotations" : [ "@Query(\"SELECT ptype FROM PetType ptype ORDER BY ptype.name\")" ]
      } ],
      "relationships" : {
        "PERSISTS" : {
          "org.springframework.samples.petclinic.owner.PetType" : 1
        },
        "USED_BY" : {
          "org.springframework.samples.petclinic.owner.PetTypeFormatter" : 2,
          "org.springframework.samples.petclinic.owner.PetController" : 2
        }
      }
    },
    "org.springframework.samples.petclinic.owner.PetValidator" : {
      "methods" : [ {
        "signature" : "public void validate(java.lang.Object, org.springframework.validation.Errors)",
        "annotations" : [ "@Override" ]
      }, {
        "signature" : "public boolean supports(null)",
        "annotations" : [ "@Override" ]
      } ],
      "fields" : [ {
        "declaration" : "private static final String REQUIRED"
      } ],
      "relationships" : {
        "CREATED_BY" : {
          "org.springframework.samples.petclinic.owner.PetController" : 1
        },
        "CALLS" : {
          "org.springframework.samples.petclinic.owner.Pet" : 2,
          "org.springframework.samples.petclinic.model.BaseEntity" : 1,
          "org.springframework.samples.petclinic.model.NamedEntity" : 1
        },
        "USES" : {
          "org.springframework.samples.petclinic.owner.Pet" : 2
        }
      }
    },
    "org.springframework.samples.petclinic.owner.Visit" : {
      "annotations" : [ "@Entity", "@Table(name = \"visits\")" ],
      "methods" : [ {
        "signature" : "public java.time.LocalDate getDate()"
      }, {
        "signature" : "public void setDate(java.time.LocalDate)"
      }, {
        "signature" : "public java.lang.String getDescription()"
      }, {
        "signature" : "public void setDescription(java.lang.String)"
      }, {
        "signature" : "public org.springframework.samples.petclinic.owner.Visit Visit()"
      } ],
      "fields" : [ {
        "declaration" : "private LocalDate date",
        "annotations" : [ "@Column(name = \"visit_date\")", "@DateTimeFormat(pattern = \"yyyy-MM-dd\")" ]
      }, {
        "declaration" : "private String description",
        "annotations" : [ "@NotBlank" ]
      } ],
      "relationships" : {
        "EXTENDS" : {
          "org.springframework.samples.petclinic.model.BaseEntity" : 1
        },
        "USED_BY" : {
          "org.springframework.samples.petclinic.owner.Pet" : 1,
          "org.springframework.samples.petclinic.owner.VisitController" : 1,
          "org.springframework.samples.petclinic.owner.Owner" : 5
        }
      }
    },
    "org.springframework.samples.petclinic.owner.VisitController" : {
      "annotations" : [ "@Controller" ],
      "methods" : [ {
        "signature" : "public void setAllowedFields(org.springframework.web.bind.WebDataBinder)",
        "annotations" : [ "@InitBinder" ]
      }, {
        "signature" : "public org.springframework.samples.petclinic.owner.Visit loadPetWithVisit(int, int, null)",
        "annotations" : [ "@ModelAttribute(\"visit\")" ]
      }, {
        "signature" : "public java.lang.String initNewVisitForm()",
        "annotations" : [ "@GetMapping(\"/owners/{ownerId}/pets/{petId}/visits/new\")" ]
      }, {
        "signature" : "public java.lang.String processNewVisitForm(org.springframework.samples.petclinic.owner.Owner, int, org.springframework.samples.petclinic.owner.Visit, org.springframework.validation.BindingResult, org.springframework.web.servlet.mvc.support.RedirectAttributes)",
        "annotations" : [ "@PostMapping(\"/owners/{ownerId}/pets/{petId}/visits/new\")" ]
      }, {
        "signature" : "public org.springframework.samples.petclinic.owner.VisitController VisitController(org.springframework.samples.petclinic.owner.OwnerRepository)"
      } ],
      "fields" : [ {
        "declaration" : "private final OwnerRepository owners"
      } ],
      "relationships" : {
        "CALLS" : {
          "org.springframework.samples.petclinic.owner.Pet" : 1,
          "org.springframework.samples.petclinic.owner.Owner" : 2
        },
        "USES" : {
          "org.springframework.samples.petclinic.owner.Pet" : 3,
          "org.springframework.samples.petclinic.owner.Owner" : 6,
          "org.springframework.samples.petclinic.owner.OwnerRepository" : 2,
          "org.springframework.samples.petclinic.owner.Visit" : 9
        },
        "CREATES" : {
          "org.springframework.samples.petclinic.owner.Visit" : 1
        }
      }
    },
    "org.springframework.samples.petclinic.system.CacheConfiguration" : {
      "annotations" : [ "@Configuration(proxyBeanMethods = false)", "@EnableCaching" ],
      "methods" : [ {
        "signature" : "public org.springframework.boot.autoconfigure.cache.JCacheManagerCustomizer petclinicCacheConfigurationCustomizer()",
        "annotations" : [ "@Bean" ]
      }, {
        "signature" : "private javax.cache.configuration.Configuration<Object,Object> cacheConfiguration()"
      } ],
      "relationships" : { }
    },
    "org.springframework.samples.petclinic.system.CrashController" : {
      "annotations" : [ "@Controller" ],
      "methods" : [ {
        "signature" : "public java.lang.String triggerException()",
        "annotations" : [ "@GetMapping(\"/oups\")" ]
      } ],
      "relationships" : { }
    },
    "org.springframework.samples.petclinic.system.WebConfiguration" : {
      "annotations" : [ "@Configuration", "@SuppressWarnings(\"unused\")" ],
      "methods" : [ {
        "signature" : "public org.springframework.web.servlet.LocaleResolver localeResolver()",
        "annotations" : [ "@Bean" ]
      }, {
        "signature" : "public org.springframework.web.servlet.i18n.LocaleChangeInterceptor localeChangeInterceptor()",
        "annotations" : [ "@Bean" ]
      }, {
        "signature" : "public void addInterceptors(org.springframework.web.servlet.config.annotation.InterceptorRegistry)",
        "annotations" : [ "@Override" ]
      } ],
      "relationships" : { }
    },
    "org.springframework.samples.petclinic.system.WelcomeController" : {
      "annotations" : [ "@Controller" ],
      "methods" : [ {
        "signature" : "public java.lang.String welcome()",
        "annotations" : [ "@GetMapping(\"/\")" ]
      } ],
      "relationships" : { }
    },
    "org.springframework.samples.petclinic.vet.Specialty" : {
      "annotations" : [ "@Entity", "@Table(name = \"specialties\")" ],
      "relationships" : {
        "EXTENDS" : {
          "org.springframework.samples.petclinic.model.NamedEntity" : 1
        },
        "USED_BY" : {
          "org.springframework.samples.petclinic.vet.Vet" : 1
        }
      }
    },
    "org.springframework.samples.petclinic.vet.Vet" : {
      "annotations" : [ "@Entity", "@Table(name = \"vets\")" ],
      "methods" : [ {
        "signature" : "protected null getSpecialtiesInternal()"
      }, {
        "signature" : "public null getSpecialties()",
        "annotations" : [ "@XmlElement" ]
      }, {
        "signature" : "public int getNrOfSpecialties()"
      }, {
        "signature" : "public void addSpecialty(org.springframework.samples.petclinic.vet.Specialty)"
      } ],
      "fields" : [ {
        "declaration" : "private Set<Specialty> specialties",
        "annotations" : [ "@ManyToMany(fetch = FetchType.EAGER)", "@JoinTable(name = \"vet_specialties\", joinColumns = @JoinColumn(name = \"vet_id\"), inverseJoinColumns = @JoinColumn(name = \"specialty_id\"))" ]
      } ],
      "relationships" : {
        "EXTENDS" : {
          "org.springframework.samples.petclinic.model.Person" : 1
        },
        "USED_BY" : {
          "org.springframework.samples.petclinic.vet.VetController" : 1,
          "org.springframework.samples.petclinic.vet.Vets" : 1
        },
        "USES" : {
          "org.springframework.samples.petclinic.vet.Specialty" : 4
        },
        "ASSOCIATES" : {
          "org.springframework.samples.petclinic.vet.Specialty" : 1
        },
        "PERSISTED_BY" : {
          "org.springframework.samples.petclinic.vet.VetRepository" : 1
        }
      }
    },
    "org.springframework.samples.petclinic.vet.VetController" : {
      "annotations" : [ "@Controller" ],
      "methods" : [ {
        "signature" : "public java.lang.String showVetList(int, org.springframework.ui.Model)",
        "annotations" : [ "@GetMapping(\"/vets.html\")" ]
      }, {
        "signature" : "private java.lang.String addPaginationModel(int, null, org.springframework.ui.Model)"
      }, {
        "signature" : "private null findPaginated(int)"
      }, {
        "signature" : "public org.springframework.samples.petclinic.vet.Vets showResourcesVetList()",
        "annotations" : [ "@GetMapping({ \"/vets\" })", "@ResponseBody" ]
      }, {
        "signature" : "public org.springframework.samples.petclinic.vet.VetController VetController(org.springframework.samples.petclinic.vet.VetRepository)"
      } ],
      "fields" : [ {
        "declaration" : "private final VetRepository vetRepository"
      } ],
      "relationships" : {
        "CALLS" : {
          "org.springframework.samples.petclinic.vet.Vets" : 2
        },
        "USES" : {
          "org.springframework.samples.petclinic.vet.Vets" : 6,
          "org.springframework.samples.petclinic.vet.VetRepository" : 2,
          "org.springframework.samples.petclinic.vet.Vet" : 1
        },
        "CREATES" : {
          "org.springframework.samples.petclinic.vet.Vets" : 2
        }
      }
    },
    "org.springframework.samples.petclinic.vet.VetRepository" : {
      "methods" : [ {
        "signature" : "public abstract null findAll()",
        "annotations" : [ "@Transactional(readOnly = true)", "@Cacheable(\"vets\")" ]
      }, {
        "signature" : "public abstract null findAll(org.springframework.data.domain.Pageable)",
        "annotations" : [ "@Transactional(readOnly = true)", "@Cacheable(\"vets\")" ]
      } ],
      "relationships" : {
        "PERSISTS" : {
          "org.springframework.samples.petclinic.vet.Vet" : 1
        },
        "USED_BY" : {
          "org.springframework.samples.petclinic.vet.VetController" : 2
        }
      }
    },
    "org.springframework.samples.petclinic.vet.Vets" : {
      "annotations" : [ "@XmlRootElement" ],
      "methods" : [ {
        "signature" : "public null getVetList()",
        "annotations" : [ "@XmlElement" ]
      } ],
      "fields" : [ {
        "declaration" : "private List<Vet> vets"
      } ],
      "relationships" : {
        "USED_BY" : {
          "org.springframework.samples.petclinic.vet.VetController" : 2
        },
        "USES" : {
          "org.springframework.samples.petclinic.vet.Vet" : 1
        }
      }
    }
  }
}